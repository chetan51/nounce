   Framework
.1   * NCNotificationManager
.1     ~ (NSMutableDictionary *)notifications

.2     + notificationWithID:(NSString *)notificationID

.2     + listen
.2         // Listens for events about a notification from Notification Center
           
 2     + eventForNotification:(NSNotification *)message
 2         // Notifies the specified objects for the notification for
 2         // which the event happened

.1     + notify:(NCNotification *)notification
.1         // Overwrites any existing notification
           
       + clear:(NCNotification *)notification
       
       + clearAll
       
       + expire:(NCNotification *)notification
       

   Application (Notification Center)
.1   * AppController
.1     - listen
.1           // Listen to messages from all other applications

.1     - notificationPosted:(NSNotification *)message
 
.1     - notify:(NCNotification *)notification
       
       - clearNotification:(NCNotification *)notification
       
.1     - UIShowNotificationPane

.1     - UIHideNotificationPane
       
       - UISortApplicationToTopOfNotificationPane:(NSApplication *)application
       
       - UIShowNotificationBubbleWithNotifications:(NSArray *)notifications
       
       - NCNotificationHoveredWithID:(NSString *)notificationID
       
       - NCNotificationClickedWithID:(NSString *)notificationID
       
       - NCNotificationClearClickedWithID:(NSString *)notificationID
       
.2     - NCNotificationInputSubmittedWithID:(NSString *)notificationID formName:(NSString *)formName buttonName:(NSString *)buttonName inputData:(NSString *)inputData
             // inputData is JSON string

.1   * NotificationPane, NotificationStatus (shared Javascript client)
.1     - notify (String notificationID, String notificationTitle, HTML notificationContent, String fromAppID, String fromAppName)
       
.1   * NCNotificationCenter (singleton)
.1     ~ (NSMutableDictionary *)applications
.1           // Indexed by application ID
.1     ~ (NSMutableDictionary *)notifications
.1           // Indexed by notification ID
       ~ (NSMutableArray *)expiredNotifications
             // Ordered by time expired

.1     - notify:(NCNotification *)notification
.1         // Overwrites any existing notification
       
.2     - notificationWithID:(NSString *)notificationID
	 
       - clear:(NCNotification *)notification
       
       - clearAllForApp:(NCApplication *)app
       
       - expire:(NCNotification *)notification
       
.2     - submitFormForNotificationWithID:(NSString *)notificationID inputData:(NSDictionary *)inputData formName:(NSString *)formName buttonName:(NSString *)buttonName
       

   Shared Classes
.1   * NCNotification
.1     ~ (NSString *)id
           // Prefixed with the fromApp ID's namespace
.1     ~ (NCApplication *)fromApp
.1     ~ (NSString *)title
.1     ~ (NSString *)content
       ~ (NCNotificationType)type
       ~ (NSString *)group
           // For grouping together notifications of the same app
       ~ (NCIcon *)groupIcon
           // For notification status area icon
	     // Note: If more than one notifications of the same group are submitted by the same app, the group icon of the latest one will be used in the notification status area
       ~ (NCIcon *)notificationIcon
.2     ~ (NSString *)input
       ~ (NSDate *)expires
.2     ~ (NSObject *)callbackObject
.2     ~ (selector)callbackSelector

.1     + notificationWithTitle:(NSString *)title
.1         content:(NSString *)content
           type:(NCNotificationType)type (^)  // defaults to DONE
           group:(NSString *)group (^)
           groupIcon:(NCIcon *)groupIcon (^)
           notificationIcon:(NCIcon *)notificationIcon (^)
.2         input:(NSString *)input (^)  // in HTML format
           expires:(NSDate *)date
           
 2     - addObserver:(NSObject *)callbackObject
 2         selector:(selector)callbackSelector
 2         name:(selector)callbackSelector
 2           // The selector is called with (NCEvent *)event.
         
       * NCNotificationType
         # DONE
         # IN_PROGRESS
         # TIME_SENSITIVE
       
.2   * NCEvent
.2     ~ (NCEventType) type
.2     ~ (NSDictionary *) data
 2           // If type is NCEVENT_INPUT_SUBMIT, `data` will contain
 2           // objects for keys "FormName", "ButtonName" and "InputData".
       
.2     * NCEventType
.2       # READ
.2       # CLEARED
.2       # INPUT_SUBMIT
 
.1   * NCApplication
.1     ~ (NSString *)id
.1     ~ (NSString *)name
       ~ (NCIcon *)icon
.1     
.1     + applicationWithBundleIdentifier:(NSString *)bundleIdentifier

     * NCIcon
       ~ (NSString *)path
	 
       + iconWithPathRelativeToResources:(NSString *)path
	 
       + iconWithAbsolutePath:(NSString *)path
	 
       + iconWithImage:(NSImage *)image
	 

   Plugins
     Adium
.2     * NounceAdiumPlugin
.2       ~ (NSMutableDictionary *)chats
.2           // Contains NCAIChat's, indexed by chat's UID
         
.2       - messageReceived:(NSNotification *)notification
         
 2       - messageSent:(NSNotification *)notification
 
.2       - (NCAIChat *)getChatForAIChat:(AIChat *)givenChat
 
.2       - (NCAIMessage *)getMessageForContentMessage:(AIContentMessage *)contentMessage

.2       - appendMessageToChat:(NCAIChat *)chat message:(NCAIMessage *)message
 
.2       - updateAndSubmitNotification:(NCAIChat *)chat numUnviewedMessages:(int)numUnviewedMessages
         
 2       - responseFromNotification:(NSDictionary *)response
         
.2     * NCAIChat
.2       ~ (NSString *)ID
.2       ~ (NSString *)name
.2       ~ (NSMutableArray *)newMessages
.2       ~ (NCNotification *)currentNotification
 
.2     * NCAIMessage
.2       ~ (bool)isSenderSelf
.2       ~ (NSString *)senderName
.2       ~ (NSString *)message